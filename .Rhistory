coord_flip()
ggplotly(p)
p <- ggplot(data = male_korea, aes(x = name, y = sum_male)) +
geom_bar() +
coord_flip()
ggplotly(p)
library(plotly)
ggplotly(p)
p <- ggplot(data = male_korea, aes(x = name, y = sum_male)) +
geom_col() +
coord_flip()
ggplotly(p)
p <- ggplot(data = male_korea, aes(x = name, y = sum_male)) +
geom_col() +
coord_flip()
ggplotly(p)
ggplot(data = house_korea, aes(x = name, y = sum_apart)) +
geom_col() +
coord_flip() +
scale_x_discrete()
ggplot(data = house_korea, aes(x = name, y = sum_apart)) +
geom_col() +
coord_flip() +
scale_x_discrete(name)
ggplot(data = house_korea, aes(x = name, y = sum_apart)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = name)
ggplot(data = house_korea, aes(x = name, y = sum_apart)) +
geom_col() +
coord_flip() +
scale_x_discrete(limits = sum_apart)
ggplot(data = house_korea, aes(x = reorder(name, -sum_apart), y = sum_apart)) +
geom_col() +
coord_flip()
ggplot(data = house_korea, aes(x = reorder(name, sum_apart), y = sum_apart)) +
geom_col() +
coord_flip()
str(tbs)
str(tbc_temp)
str(korpop_temp)
korpop_temp <- rename(korpop_temp,
all_pop = 총인구_명명)
korpop_temp <- rename(korpop_temp,
all_pop = 총인구_명)
str(korpop_temp)
korpop_temp <- rename(korpop_temp,
all_man = 남자_명명)
korpop_temp <- rename(korpop_temp,
all_man = 남자_명)
table(is.na(korpop_temp$all_man))
str(changeCode(korpop1))
korpop1$name <- iconv(korpop1$name, "UTF-8","CP949")
summarise(pct_male = sum(as.numeric(kor_male)/as.numeric(all_man))
male_korea <- korpop_temp %>%
select(name, all_pop, all_man) %>%
group_by(name) %>%
summarise(pct_male = sum(as.numeric(kor_male)/as.numeric(all_man)))
male_korea <- korpop_temp %>%
select(name, all_pop, all_man) %>%
group_by(name) %>%
summarise(pct_male = sum(as.numeric(kor_male)/as.numeric(all_man)))
male_korea <- korpop_temp %>%
select(name, all_pop, all_man) %>%
group_by(name) %>%
summarise(pct_male = sum(as.numeric(all_man)/as.numeric(all_man)))
male_korea
male_korea <- korpop_temp %>%
select(name, all_pop, all_man) %>%
group_by(name) %>%
summarise(pct_male = as.numeric(all_man)/as.numeric(all_man))
male_korea
male_korea <- korpop_temp %>%
select(name, all_pop, all_man) %>%
group_by(name) %>%
summarise(pct_male = as.numeric(all_man)/as.numeric(all_pop))
male_korea
p <- ggplot(data = male_korea, aes(x = name, y = pct_male)) +
geom_col() +
coord_flip()
ggplotly(p)
p <- ggplot(data = male_korea, aes(x = reorder(name, pct_male), y = pct_male)) +
geom_col() +
coord_flip()
ggplotly(p)
p <- ggplot(data = male_korea, aes(x = reorder(name, pct_male), y = pct_male)) +
geom_col() +
coord_flip() +
xlim(0.4, 0.6)
ggplotly(p)
male_korea <- korpop_temp %>%
select(name, all_pop, all_man) %>%
group_by(name) %>%
summarise(pct_male = (as.numeric(all_man)/as.numeric(all_pop)) * 100)
male_korea
p <- ggplot(data = male_korea, aes(x = reorder(name, pct_male), y = pct_male)) +
geom_col() +
coord_flip()
ggplotly(p)
kormap1
ggChoropleth(data = male_korea,           # 지도에 표현할 데이터
aes(fill = pct_male,      # 색으로 표현할 변수
map_id = name),    # 지역 기준 변수
map = kor_map1)       # 지도 데이터
ggChoropleth(data = male_korea,           # 지도에 표현할 데이터
aes(fill = pct_male,      # 색으로 표현할 변수
map_id = name),    # 지역 기준 변수
map = kor_map1)       # 지도 데이터
ggChoropleth(data = male_korea,           # 지도에 표현할 데이터
aes(fill = pct_male,      # 색으로 표현할 변수
map_id = name),    # 지역 기준 변수
map = kormap1)       # 지도 데이터
p <- ggplot(data = male_korea, aes(x = reorder(name, pct_male), y = pct_male)) +
geom_col() +
coord_flip() +
xlim(45, 70)
ggplotly(p)
p <- ggplot(data = male_korea, aes(x = reorder(name, pct_male), y = pct_male)) +
geom_col() +
coord_flip() +
ylim(45, 70)
ggplotly(p)
p <- ggplot(data = male_korea, aes(x = reorder(name, pct_male), y = pct_male)) +
geom_col() +
coord_flip() +
ylim(0, 70)
ggplotly(p)
p <- ggplot(data = male_korea, aes(x = reorder(name, pct_male), y = pct_male)) +
geom_col() +
coord_flip() +
ylim(20, 70)
ggplotly(p)
p <- ggplot(data = male_korea, aes(x = reorder(name, pct_male), y = pct_male)) +
geom_col() +
coord_flip() +
ylim(0, 70)
ggplotly(p)
p
p
p
ggplot(data = house_korea, aes(x = reorder(name, sum_apart), y = sum_apart)) +
geom_col() +
coord_flip()
str(korpop_temp)
male_female
male_female <- korpop_temp %>%
select(name, kor_male, kor_female)
male_female
ggplot(data = male_female, aes(x = name, y = kor_male, kor_female)) +
geom_col(position = dodge)
ggplot(data = male_female, aes(x = name, y = kor_male, kor_female)) +
geom_col(position = 'dodge')
ggplot(data = male_female, aes(x = name, y = kor_male, kor_female)) +
geom_col(position = 'dodge') +
coord_flip()
ggplot(data = male_female, aes(x = name, y = kor_male, fill = kor_female)) +
geom_col(position = 'dodge') +
coord_flip()
library(ggplot2)
mpg <- as.data.frame(ggplot2::mpg)
ggplot(data = economics, aes(x = date, y = unemploy)) + geom_line()
ggplot(data = economics, aes(x = date, y = psavert)) + geom_line()
ggplot(data = mpg, aes(x = drv, y = hwy)) + geom_boxplot()
library(dplyr)
class2 <- mpg %>% filter(class %in% c('compact', 'subcompact', 'suv'))
ggplot(data = class2, aes(x = class, y = cty)) + geom_boxplot()
install.packages('foreign')
library(foreign) # spss 파일 로드
library(dplyr) # 전처리
library(ggplot2) # 시각화
library(readxl) # 엑셀 파일 불러오기
setwd = 'C:/Sources/StudyR/Busan_202202_R'
getwd()
dir()
raw_welfare <- read.spss(file = './Data-20220207T040151Z-001/Data/koweps_hpc10_2015_beta1.sav',
to.data.frame = T)
welfare <- raw_welfare
welfare
head(welfare)
tail(welfare)
dim(welfare)
View(welfare) # 가능하면 사용하지 않는 것이 좋음
str(welfare)
summary(welfare)
is.data.frame(welfare) # data frame인 것을 확인
welfare <- rename(welfare,
sex = h10_g3,            # 성별
birth = h10_g4,          # 태어난 연도
marriage  = h10_g10,     # 혼인 상태
religion = h10_g11,      # 종교
income = p1002_8aq1,     # 월급
code_job = h10_eco9,     # 직종코드
code_region = h10_reg7)  # 지역 코드
class(welfare$sex) # character
table(welfare$sex)
welfare$sex <- ifelse(welfare$sex == 9, NA, welfare$sex) # 이상치 결측 처리
table(is.na(welfare$sex)) # 결측치 없음
welfare$sex <- ifelse(welfare$sex == 1, 'male', 'female') # 1: male , 2: female
table(welfare$sex)
class(welfare$income) # numeric
summary(welfare$income)
qplot(welfare$income) # 빈도표
qplot(welfare$income) + xlim(0, 1000) # x축의 한계를 1000으로 설정
summary(welfare$income) # NA's = 12030으로 NA 값이 존재하는 것을 확인
welfare$income <- ifelse(welfare$income %in% c(0, 9999), NA, welfare$income)
table(is.na(welfare$income)) # NA = 12044
sex_income <- welfare %>%
filter(!is.na(income)) %>% # income 에서 NA 값을 가진 것들을 제외
group_by(sex) %>%  # sex 로 grouping
summarise(mean_income = mean(income)) # 성별을 기준으로 income의 평균 조회
sex_income
ggplot(data = sex_icome, aes(x = sex , y = mean_income)) + geom_col()
class(welfare$birth) # numeric
summary(welfare$birth) # 연도 값으로 가짐
qplot(welfare$birth)
table(is.na(welfare$birth)) # FALSE 16664
welfare$birth <- ifelse(welfare$birth == 9999, NA, welfare$birth)
table(is.na(welfare$birth))
welfare$age <- 2022 - welfare$birth + 1
summary(welfare$age)
qplot(welfare$age)
age_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
head(age_income)
ggplot(data = age_income, aes(x = age, y = mean_income)) + geom_line()
welfare <- welfare %>%
mutate(ageg = ifelse(age < 30, 'young', ifelse(age <= 69, 'middle', 'old')))
table(welfare$ageg)
qplot(welfare$ageg)
ageg_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg) %>%
summarise(mean_income = mean(income))
ageg_income
ggplot(data = ageg_income, aes(x = ageg, y = mean_income)) + geom_col()
ggplot(data = ageg_income, aes(x = ageg, y = mean_income)) +
geom_col() +
scale_x_discrete(limits = c('young', 'middle', 'old'))
sex_income <- welfare %>%
filter(!is.na(income)) %>%
group_by(ageg, sex) %>%  # grouping 2개
summarise(mean_income = mean(income))
sex_income
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col() +
scale_x_discrete(limits = c('young', 'middle', 'old'))
ggplot(data = sex_income, aes(x = ageg, y = mean_income, fill = sex)) +
geom_col(position = 'dodge') +
scale_x_discrete(limits = c('young', 'middle', 'old'))
ggplot(data = male_female, aes(x = kor_female, y = kor_male, fill = name)) +
geom_col(position = 'dodge') +
coord_flip()
sex_age <- welfare %>%
filter(!is.na(income)) %>%
group_by(age, sex) %>% # age와 sex로 grouping
summarise(mean_income = mean(income))
head(sex_age)
ggplot(data = sex_age, aes(x = age, y = mean_income, col = sex)) + geom_line()
class(welfare$code_job) # numeric
table(welfare$code_job)
library(readxl)
list_job <- read_excel('./Data-20220207T040151Z-001/Data/Koweps_Codebook.xlsx', col_names = T, sheet = 2, file)
head(list_job)
welfare <- left_join(welfare, list_job, id = 'code_job')
welfare %>%
filter(!is.na(code_job)) %>%
select(code_job, job) %>%
head(10)
job_income <- welfare %>%
filter(!is.na(job) & !is.na(income)) %>%
group_by(job) %>%
summarise(mean_income = mean(income))
head(job_income)
top10 <- job_income %>%
arrange(desc(mean_income)) %>%
head(10)
top10
ggplot(data = top10, aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip()
bottom10 <- job_income %>%
arrange(mean_income) %>%
head(10)
bottom10
ggplot(data = bottom10, aes(x = reorder(job, mean_income), y = mean_income)) +
geom_col() +
coord_flip()
job_male <- welfare %>%
filter(!is.na(job) & sex == 'male') %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_male
job_female <- welfare %>%
filter(!is.na(job) & sex == 'female') %>%
group_by(job) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
head(10)
job_female
ggplot(data = job_male, aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip()
ggplot(data = job_female, aes(x = reorder(job, n), y = n)) +
geom_col() +
coord_flip()
class(welfare$religion) # numeric
table(welfare$religion) # 1: 8047 2: 8617
welfare$religion <- ifelse(welfare$religion == 1, 'yes', 'no')
table(welfare$religion) # yes: 8047 no: 8617
qplot(welfare$religion)
class(welfare$marriage) # numeric
table(welfare$marriage) # 0 1 2 3 4 5 6
welfare$group_marriage <- ifelse(welfare$marriage == 1, 'marriage',
ifelse(welfare$marriage == 3, 'divorce', NA))
table(welfare$group_marriage)
table(is.na(welfare$group_marriage)) # 결측값 존재
qplot(welfare$group_marriage) # 빈도
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 1))
religion_marriage
religion_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(religion, group_marriage) %>%
group_by(religion) %>%
mutate(pct = round(n/sum(n)*100, 1))
religion_marriage
divorce <- religion_marriage %>%
filter(group_marriage == 'divorce') %>%
select(religion, pct) # pct = percent
divorce
ggplot(data = divorce, aes(x = religion, y = pct)) + geom_col()
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
group_by(ageg, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%  # sum(n) 에서 n은 summarise에서 선언한 n을 뜻함
mutate(pct = round(n/tot_group*100, 1))
ageg_marriage
ageg_marriage <- welfare %>%
filter(!is.na(group_marriage)) %>%
count(ageg, group_marriage) %>%
group_by(ageg) %>%
mutate(pct = round(n/sum(n)*100, 1))
ageg_marriage
ageg_divorce <- ageg_marriage %>%
filter(ageg != 'young' & group_marriage == 'divorce') %>%
select(ageg, pct)
ageg_divorce
ggplot(data = ageg_divorce, aes(x = ageg, y = pct)) + geom_col()
ageg_religion_marriage <- welfare %>%
filter(!is.na(group_marriage) & ageg != 'young') %>%
group_by(ageg, religion, group_marriage) %>%
summarise(n = n()) %>%
mutate(tot_group = sum(n)) %>%
mutate(pct = round(n/tot_group*100, 1))
ageg_religion_marriage
df_divorce <- ageg_religion_marriage %>%
filter(group_marriage == 'divorce') %>%
select(ageg, religion, pct)
df_divorce
ggplot(data = df_divorce, aes(x = ageg, y = pct, fill = religion)) +
geom_col(position = 'dodge')
male_female
_temp)
str(korpop_temp)
korpop_temp <- rename(korpop_temp,
all_korean = 내국인_계_명)
male_female <- korpop_temp %>%
select(name, all_korean, kor_male, kor_female)
male_female
male_female <- korpop_temp %>%
select(name, all_korean, kor_male, kor_female) %>%
mutate(pct_kor_male = kor_male / all_korean) %>%
mutate(pct_kor_female = kor_female / all_korean)
mutate(pct_kor_male = as.numeric(kor_male / all_korean) %>%
male_female <- korpop_temp %>%
select(name, all_korean, kor_male, kor_female) %>%
mutate(pct_kor_male = as.numeric(kor_male / all_korean)) %>%
mutate(pct_kor_female = as.numeric(kor_female / all_korean))
male_female <- korpop_temp %>%
select(name, all_korean, kor_male, kor_female) %>%
mutate(pct_kor_male = as.numeric(kor_male / all_korean)) %>%
mutate(pct_kor_female = as.numeric(kor_female / all_korean))
male_female <- korpop_temp %>%
select(name, all_korean, kor_male, kor_female) %>%
mutate(pct_kor_male = as.numeric(kor_male / all_korean)) %>%
mutate(pct_kor_female = as.numeric(kor_female / all_korean))
male_female <- korpop_temp %>%
select(name, all_korean, kor_male, kor_female) %>%
mutate(pct_kor_male = as.numeric(kor_male) / as.numeric(all_korean)) %>%
mutate(pct_kor_female = as.numeric(kor_female) / as.numeirc(all_korean))
male_female <- korpop_temp %>%
select(name, all_korean, kor_male, kor_female) %>%
mutate(pct_kor_male = as.numeric(kor_male) / as.numeric(all_korean)) %>%
mutate(pct_kor_female = as.numeric(kor_female) / as.numeric(all_korean))
male_female
male_female <- korpop_temp %>%
mutate(pct_kor_male = as.numeric(kor_male) / as.numeric(all_korean)) %>%
mutate(pct_kor_female = as.numeric(kor_female) / as.numeric(all_korean)) %>%
group_by(name) %>%
summarise(name, pct_kor_male, pct_kor_female)
male_female
df_divorce
str(religion)
str(df_divorce$religion)
male_female
ggplot(data = male_female, aes(x = kor_female, y = kor_male, fill = name)) +
geom_col(position = 'dodge') +
coord_flip()
ggplot(data = male_female, aes(x = pct_kor_female, y = pct_kor_male, fill = name)) +
geom_col(position = 'dodge') +
coord_flip()
ggplot(data = male_female, aes(x = pct_kor_female, y = pct_kor_male, fill = name)) +
geom_col(position = 'dodge')
ggplotly(p)
ggplotly(p)
p <- ggplot(data = male_female, aes(x = pct_kor_female, y = pct_kor_male, fill = name)) +
geom_col(position = 'dodge')
ggplotly(p)
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male, fill = name)) +
geom_col(position = 'dodge')
ggplotly(p)
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male, fill = name)) +
geom_col(position = 'dodge') +
coord_flip()
ggplotly(p)
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male, fill = name)) +
coord_flip()
ggplotly(p)
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male, fill = name)) +
coord_flip()
ggplotly(p)
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male)) +
coord_flip()
ggplotly(p)
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male, col = pct_kor_female) +
ggplotly(p)
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male, col = pct_kor_female) +
coord_flip())
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male, col = pct_kor_female) +
coord_flip())
ggplotly(p)
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male, col = pct_kor_female)) +
coord_flip()
ggplotly(p)
p <- ggplot(data = male_female, aes(x = name, y = pct_kor_male)) +
coord_flip()
ggplotly(p)
str(korpop_temp)
gj_sl <- korpop_temp %>%
filter(name = '광주광역시' | name = '서울특별시') %>%
select(name, date, all_pop)
gj_sl <- korpop_temp %>%
filter(name = '광주광역시' | name = '서울특별시')
gj_sl <- korpop_temp %>%
filter(name %in% c('서울특별시', '광주광역시')) %>%
select(name, date, all_pop)
gj_sl
korpop_temp$date
str(korpop_temp)
korpop_temp <- rename(korpop_temp,
all_foreigner = 외국인_계_명)
gj_sl <- korpop_temp %>%
filter(name %in% c('서울특별시', '광주광역시')) %>%
select(name, all_foreigner)
gj_sl
ggplot(data = gj_sl, aes(x = name, y = all_foreigner)) +
geom_col()
ggplot(data = gj_sl, aes(x = name, y = all_foreigner)) +
geom_col()+
ylim(0, 400000)
ggplot(data = gj_sl, aes(x = name, y = all_foreigner)) +
geom_col()+
ylim(0, 40000)
ggplot(data = gj_sl, aes(x = name, y = all_foreigner)) +
geom_col()+
ylim(0, 400000)
ggplot(data = gj_sl, aes(x = name, y = all_foreigner)) +
geom_col()
str(korpop_temp)
ggChoropleth(data = tbc,          # 지도에 표현할 데이터
aes(fill = NewPts,   # 색깔로 표현할 변수
map_id = code,   # 지역 기준 변수
tooltip = name), # 지도 위에 표시할 지역명
map = kormap1,       # 지도 데이터
interactive = T)     # 인터랙티브
install.packages('ggiraphExtra')
library(ggiraphExtra)
str(USArrests)
library(readxl)
df <- read.csv('C:/Users/admin/Desktop/미니 프로젝트 1/활용한 데이터/3_시각화용(전처리 완료)/지역별_데이터_컬럼_수정.csv', fileEncoding = 'UTF-8')
df
library(ggplot2)
ggplot(data = df, aes(x = df$지역, y = df$강소기업수)) + geom_col()
library(readxl)
df <- read.csv('C:/Users/thdwo/busan_jupyter/01_MiniProject/Data/지역별_데이터_컬럼_수정.csv', fileEncoding = 'UTF-8')
df
library(ggplot2)
ggplot(data = df, aes(x = df$지역, y = df$강소기업수)) + geom_col()
library(readxl)
df <- read.csv('C:/Users/thdwo/busan_jupyter/01_MiniProject/Data/지역별_데이터_컬럼_수정.csv', fileEncoding = 'UTF-8')
df
library(ggplot2)
ggplot(data = df, aes(x = df$지역, y = df$강소기업수)) + geom_col()
